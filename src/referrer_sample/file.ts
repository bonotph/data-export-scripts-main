import { format } from 'date-fns';
import { PrismaClient } from '../../prisma/generated/dig_client';
import { saveAoaToXLSX } from '../common/saveToXLSX';

const ID_PREFIX = [
  'HKGI_20221202A_NOVA0004/A1009588B01-001-LIB1',
  'HKGI_20221202A_NOVA0004/A1009577B01-002-LIB1',
  'CPOS_20230502/A0005932B01-001-LIB1',
  'CPOS_20230502/A0005662B01-001-LIB1',
  'CPOS_20230502/A0005660B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0005487B01-001-LIB1',
  'CPOS_20230502/A0005441B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0005418B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0005415B01-001-LIB1',
  'CPOS_20230511/A0005216B01-001-LIB1',
  'CPOS_20230511/A0005207B01-001-LIB1',
  'CPOS_20230502/A0005186B01-001-LIB1',
  'CPOS_20230502/A0005181B01-001-LIB1',
  'CPOS_20230511/A0005180B01-001-LIB1',
  'CPOS_20230511/A0005179B01-001-LIB1',
  'CPOS_20230511/A0005178B01-001-LIB1',
  'CPOS_20230502/A0005177B01-001-LIB1',
  'CPOS_20230502/A0005174B01-001-LIB1',
  'CPOS_20230502/A0005165B01-001-LIB1',
  'CPOS_20230502/A0005163B01-001-LIB1',
  'CPOS_20230502/A0005159B01-001-LIB1',
  'CPOS_20230502/A0005136B01-001-LIB1',
  'CPOS_20230502/A0005135B01-001-LIB1',
  'CPOS_20230428/A0005071B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0005053B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0005052B01-001-LIB1',
  'HKGI_20230509_NOVA0060/A0005035B01-001-LIB1',
  'HKGI_20230510_NOVA0059/A0005008B01-001-LIB1',
  'HKGI_20230510_NOVA0059/A0005005B01-001-LIB1',
  'HKGI_20230510_NOVA0059/A0005000B01-001-LIB1',
  'HKGI_20230510_NOVA0059/A0004996B01-001-LIB1',
  'CPOS_20230428/A0004994B01-001-LIB1',
  'HKGI_20230505_NOVA0058/A0004983B01-001-LIB2',
  'HKGI_20230505_NOVA0058/A0004982B01-001-LIB2',
  'HKGI_20230505_NOVA0058/A0004978B01-001-LIB2',
  'HKGI_20230505_NOVA0058/A0004960B01-001-LIB2',
  'HKGI_20230324_NOVA0044/A0004951B01-001-LIB1',
  'HKGI_20230503_NOVA0056/A0004937B01-001-LIB1',
  'HKGI_20230502_NOVA0055/A0004909B01-001-LIB1',
  'HKGI_20230427_NOVA0054/A0004883B01-001-LIB1',
  'HKGI_20230427_NOVA0054/A0004880B01-001-LIB1',
  'HKGI_20230428_NOVA0053/A0004876B01-001-LIB1',
  'HKGI_20230428_NOVA0053/A0004872B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0004866B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0004765B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0004737B01-001-LIB1',
  'HKGI_20230330_NOVA0045/A0004640B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0004629B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0004618B01-001-LIB1',
  'HKGI_20230425_NOVA0052/A0004617B01-001-LIB1',
  'CPOS_20230412/A0004508B01-001-LIB1',
  'HKGI_20230424_NOVA0049/A0004383B01-001-LIB1',
  'HKGI_20230424_NOVA0049/A0004372B01-001-LIB1',
  'HKGI_20230427_NOVA0048/A0004355B01-001-LIB1',
  'HKGI_20230427_NOVA0048/A0004352B01-001-LIB1',
  'HKGI_20230331_NOVA0047/A0004350B01-001-LIB1',
  'HKGI_20230330_NOVA0045/A0004339B01-001-LIB1',
  'HKGI_20230330_NOVA0045/A0004338B01-001-LIB1',
  'HKGI_20230331_NOVA0047/A0004336B01-001-LIB1',
  'HKGI_20230331_NOVA0047/A0004330B01-001-LIB1',
  'HKGI_20230331_NOVA0047/A0004328B01-001-LIB1',
  'HKGI_20230411_NOVA0046/A0004314B01-001-LIB1',
  'HKGI_20230411_NOVA0046/A0004307B01-001-LIB1',
  'HKGI_20230411_NOVA0046/A0004306B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0004305B01-001-LIB1',
  'CPOS_20230428/A0004302B01-001-LIB1',
  'HKGI_20230411_NOVA0046/A0004301B01-001-LIB1',
  'CPOS_20230412/A0004300B01-001-LIB1',
  'CPOS_20230412/A0004299B01-001-LIB1',
  'CPOS_20230412/A0004286B01-001-LIB1',
  'CPOS_20230412/A0004281B01-001-LIB1',
  'CPOS_20230412/A0004279B01-001-LIB1',
  'CPOS_20230412/A0004278B01-001-LIB1',
  'CPOS_20230412/A0004274B01-001-LIB1',
  'CPOS_20230412/A0004268B01-001-LIB1',
  'CPOS_20230412/A0004267B01-001-LIB1',
  'CPOS_20230412/A0004266B01-001-LIB1',
  'CPOS_20230414/A0004265B01-001-LIB1',
  'CPOS_20230414/A0004256B01-001-LIB1',
  'CPOS_20230414/A0004240B01-001-LIB1',
  'CPOS_20230412/A0004225B01-001-LIB1',
  'CPOS_20230412/A0004221B01-001-LIB1',
  'CPOS_20230412/A0004216B01-001-LIB1',
  'CPOS_20230403/A0004215B01-001-LIB1',
  'CPOS_20230403/A0004212B01-001-LIB1',
  'CPOS_20230403/A0004207B01-001-LIB1',
  'CPOS_20230403/A0004204B01-001-LIB1',
  'CPOS_20230403/A0004194B01-001-LIB1',
  'CPOS_20230403/A0004191B01-001-LIB1',
  'CPOS_20230403/A0004190B01-001-LIB1',
  'CPOS_20230403/A0004183B01-001-LIB1',
  'CPOS_20230403/A0004180B01-001-LIB1',
  'CPOS_20230403/A0004176B01-001-LIB1',
  'CPOS_20230403/A0004172B01-001-LIB1',
  'CPOS_20230403/A0004166B01-001-LIB1',
  'CPOS_20230403/A0004165B01-001-LIB1',
  'CPOS_20230403/A0004159B01-001-LIB1',
  'CPOS_20230403/A0004158B01-001-LIB1',
  'CPOS_20230331/A0004145B01-001-LIB1',
  'CPOS_20230331/A0004135B01-001-LIB1',
  'CPOS_20230331/A0004134B01-001-LIB1',
  'CPOS_20230331/A0004133B01-001-LIB1',
  'CPOS_20230331/A0004103B01-001-LIB1',
  'CPOS_20230331/A0004100B01-001-LIB1',
  'HKGI_20230329_NOVA0040/A0002812B01-001-LIB1',
  'HKGI_20230329_NOVA0040/A0002811B01-001-LIB1',
  'HKGI_20230329_NOVA0040/A0002810B01-001-LIB1',
  'HKGI_20230329_NOVA0040/A0002809B01-001-LIB1',
  'HKGI_20230329_NOVA0040/A0002798B01-001-LIB1',
  'HKGI_20230316_NOVA0038/A0002791B01-001-LIB1',
  'HKGI_20230316_NOVA0038/A0002790B01-001-LIB1',
  'HKGI_20230316_NOVA0038/A0002789B01-001-LIB1',
  'HKGI_20230316_NOVA0038/A0002785B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002782B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002779B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002778B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002777B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002755B01-001-LIB1',
  'HKGI_20230313_NOVA0036/A0002752B01-001-LIB1',
  'HKGI_20230313_NOVA0036/A0002751B01-001-LIB1',
  'HKGI_20230313_NOVA0036/A0002748B01-001-LIB1',
  'HKGI_20230315_NOVA0037/A0002740B01-001-LIB1',
  'HKGI_20230309_NOVA0035/A0002735B01-001-LIB1',
  'HKGI_20230309_NOVA0035/A0002713B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0002673B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0002671B01-001-LIB1',
  'HKGI_20230324_NOVA0044/A0002670B01-001-LIB1',
  'CPOS_20230329/A0002570B01-001-LIB1',
  'CPOS_20230327/A0002555B01-001-LIB1',
  'CPOS_20230327/A0002523B01-001-LIB1',
  'CPOS_20230327/A0002436B01-001-LIB1',
  'CPOS_20230309/A0002283B01-001-LIB1',
  'CPOS_20230309/A0002279B01-001-LIB1',
  'CPOS_20230309/A0002218B01-001-LIB1',
  'CPOS_20230302/A0002146B01-001-LIB1',
  'CPOS_20230301/A0002096B01-001-LIB1',
  'CPOS_20230301/A0002030B01-001-LIB1',
  'CPOS_20230301/A0001959B01-001-LIB1',
  'CPOS_20230301/A0001956B01-001-LIB1',
  'HKGI_20230302_NOVA0032/A0001868B01-001-LIB1',
  'HKGI_20230130_NOVA0014/A0001797B01-001-LIB2',
  'HKGI_20221230_NOVA0012/A0001756B01-001-LIB1',
  'HKGI_20221219_NOVA0010/A0001748B01-001-LIB1',
  'HKGI_20221219_NOVA0010/A0001710B01-001-LIB1',
  'HKGI_20221223_NOVA0009/A0001674B01-001-LIB1',
  'HKGI_20221202A_NOVA0004/A0001665B01-001-LIB1',
  'CPOS_20220919/A0001518B01-001-LIB1',
];

const digPrismaClient = new PrismaClient();

async function fetchDigJobs(project: string, job: string) {
  return digPrismaClient.job.findFirst({
    select: {
      name: true,
      file: {
        select: {
          id: true,
          name: true,
          size: true,
        },
        where: {
          isDeleted: false,
          OR: [
            {
              name: {
                endsWith: '.final.vcf.gz',
              },
            },
            {
              name: {
                endsWith: '.final.vcf.gz.tbi',
              },
            },
          ],
        },
      },
    },
    where: {
      isDeleted: false,
      queueId: '',
      status: 2,
      name: job,
      project: {
        name: project,
      },
    },
    orderBy: {
      createdAt: 'desc',
    },
  });
}

function parseFilesToAoa(files: Awaited<ReturnType<typeof fetchDigJobs>>[]) {
  const result: (string | number)[][] = [];

  files.forEach((job) => {
    if (!job) {
      result.push([]);
      return;
    }
    const { name, file: files } = job;

    files.forEach(({ id, name: file_name, size }) => {
      result.push([name, id, file_name, Number(size)]);
    });
  });

  result.unshift(['prefix', 'file_id', 'file_name', 'size']);

  return result;
}

async function main() {
  const jobFiles = await Promise.all(
    ID_PREFIX.map((file) => {
      const project = file.split('/')[0];
      const job = file.split('/')[1];
      return fetchDigJobs(project, job);
    }),
  );

  console.log(
    JSON.stringify(
      jobFiles.filter((job) => job?.file.length != 2),
      null,
      2,
    ),
  );
  saveAoaToXLSX(
    [
      {
        data: parseFilesToAoa(jobFiles),
      },
    ],
    `${__dirname}/output/${format(
      new Date(),
      'yyyyMMdd_HHmmss',
    )}_sample_file.xlsx`,
  );
}

if (require.main === module) {
  main();
}
